@model Jupiter.Repository.ExceptionHandle.ExceptionHandleModel
@{ Layout = null; }

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@if(false){<script src="~/Scripts/jquery-1.7.1-vsdoc.js" type="text/javascript"></script>}
<script type="text/javascript">
    $(function () {
        $('#btnCloseThis1').click(CloseThis);
        $('#btnCloseThis2').click(CloseThis);
        $("#formExceptionHandleCreate").submit(function (event) {
            /* stop form from submitting normally */
            event.preventDefault();

            if (!$("#formExceptionHandleCreate").valid()) return;

            /* submit form */
            $.post($("#formExceptionHandleCreate").attr('action'), $("#formExceptionHandleCreate").serialize(), function (callback) {
                if (callback.Result) {
                    AddExceptionHandle(callback.Data);
                    CloseThis();
                }
                else {
                    alert(callback.Data);
                }
            }).error(function () { alert("오류가 발생했습니다. 다시 시도해 주십시오."); });
        });
    });
    function CloseThis() {
        $('#formExceptionHandleCreate').parent().empty();
    }
</script>

@using (Html.BeginForm("ExceptionHandleCreate", "Exception", FormMethod.Post, new { id = "formExceptionHandleCreate" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>
            예외 처리 정보 등록 <span style="cursor:pointer; font-weight:bold; color:Gray;" id="btnCloseThis1" title="닫기">ⓧ</span>
        </legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExceptionId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExceptionId)
            @Html.ValidationMessageFor(model => model.ExceptionId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateDate)
            @Html.ValidationMessageFor(model => model.CreateDate)
        </div>

        <p>
            <button>저장</button>
            <input type="button" id="btnCloseThis2" value="취소" />
        </p>
    </fieldset>
}